#! /usr/bin/env ruby
require 'logger'

require_relative 'lib/setup'

require_relative 'lib/publishing'
require_relative 'lib/publishing/service'
require_relative 'lib/publishing/service/apple_podcast'
require_relative 'lib/publishing/service/spotify'
require_relative 'lib/publishing/episode_fetcher'

logger = Logger.new(STDOUT)

episode_number = ARGV[0].to_i
service_name = ARGV[1]

service_klass = Publishing::Service.const_get(service_name.camelize)
episode_fetcher = Publishing::EpisodeFetcher.new(service_klass)
episode_service_id = episode_fetcher.fetch.find { |episode| episode.number == episode_number }.id

logger.info "Episode #{episode_number} on #{service_name} has ID #{episode_service_id}"

episode = Episode.find_or_initialize_by(id: episode_number)
unless episode.persisted?
  `scripts/import-feed #{episode_number}`
  episode = Episode.find_by!(id: episode_number)
end
episode.update!("#{service_name}_id".to_sym => episode_service_id)
